

ROOT = (LINE)*

LINE = COMMENT_LINE | WHITESPACE_LINE | TOKEN_DEFINITION_LINE

COMMENT_LINE = regex("//[^\n]*\n")

WHITESPACE_LINE = regex(" *\n")

TOKEN_DEFINITION_LINE = TOKEN_NAME WHITESPACE "=" WHITESPACE TOKEN_COMPOUND_EXPRESSION WHITESPACE

TOKEN_NAME = regex("[A-Z_]+")

CONCATENATION_EXPRESSION = TOKEN_EXPRESSION WHITESPACE TOKEN_COMPOUND_EXPRESSION

BRACKET_EXPRESSION = "(" WHITESPACE TOKEN_COMPOUND_EXPRESSION WHITESPACE BRACKET_EXPRESSION_END

BRACKET_EXPRESSION_END = ")" | ")+" | ")*" | ")?" | BRACKET_EXPRESSION_REPEAT_RANGE

BRACKET_EXPRESSION_REPEAT_RANGE = "){" INTEGER ",...}"

INTEGER = regex("[0-9]+")

TOKEN_COMPOUND_EXPRESSION = TOKEN_EXPRESSION | CONCATENATION_EXPRESSION | CONJUNCTION_EXPRESSION | (BRACKET_EXPRESSION (WHITESPACE TOKEN_COMPOUND_EXPRESSION)?)

CONJUNCTION_EXPRESSION = TOKEN_EXPRESSION WHITESPACE "|" WHITESPACE TOKEN_COMPOUND_EXPRESSION

TOKEN_EXPRESSION = LITERAL_EXPRESSION | TOKEN_NAME | REGEX_EXPRESSION

REGEX_EXPRESSION = "regex(" LITERAL_EXPRESSION ")"

WHITESPACE = regex(" *")

LITERAL_EXPRESSION = regex("\"([^\\\\]|\\\\(\"|n|\\\\))*?\"")
